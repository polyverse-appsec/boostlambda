Welcome to Polyverse Boost, an AI-powered Visual Studio Code extension designed to enhance your coding experience. You can explore its powerful features right after the setup.

## Getting Started

### Set Up Essentials
- A [GitHub.com](https://GitHub.com) account is required to integrate Boost into your coding environment. We prioritize your privacy and won't use your email for marketing purposes. 

- Boost also uses Git for authentication, ensure it's installed on your system for seamless operation.

- A free trial license is provided by Boost for everyone. An automatic account creation and $100 credit are given. You just need to update your payment details for bigger projects in the future.

### Launching Boost

1. **Access Boost**: Open the Boost logo on your Visual Studio Code Activity Bar on the left extension panel. You can access its code and architectural analytics.

2. **Authorization**: Since it's your first time, Boost will request access to your GitHub identity. This helps both, you, and Boost to avoid directly managing passwords! Click "Allow" to proceed.

3. **Boost Actions**: To initiate analysis on your project, click on "Run Selected Analyses" on the Boost Activity Bar. You can also select "Analyze All Files".

Boost is ready to detect potential pitfalls and modernize your existing code. Enjoy its functionalities!

### Common Queries

- **Starting An Analysis?**: Click on the Boost icon in the left extension panel and select "Run Selected Analyses". Look for ongoing status in the "Dashboard" tab of the Boost activity bar.
- **Analysis Paused?**: If you modified anything in the Visual Studio Code workspace, your analysis might pause. But don't worry, you can resume where you left off by clicking "Run Selected Analysis" again.

For additional queries or problems, visit our [Polyverse Boost page](https://polyverse.com/pages/boost-visual-studio).

## Customization and Analysis

Sara, by default, analyses the most interesting files first. You can either select specific files or exclude some for analysis.

- **Selecting Files**: Add the concerned file names or folders in a .boostOnly file located in the project root folder.
- **Creating Exclusion List**: Use a .boostIgnore file to specify files to ignore/exclude from analysis.

Sara can take a while to analyze files. If needed, you can stop the analysis by closing Source Project Folder in Visual Studio Code.

## Documentation and Modifications

- **Generating Documents**: Boost generates PDF, HTML, and Markdown documentation automatically and outputs it into the sub-folder under .boost in the File Explorer.

- **Changing the Default Output Format**: Visit the "Polyverse Boost" section in the Settings of Visual Studio Code, and select "Output Formats". Then, select your preferred output format which can be either PDF, Markdown, or HTML. Note: The default format is Markdown.

Have a great Boosted coding experience!