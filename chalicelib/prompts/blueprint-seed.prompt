Based on samples of software code files in a project, you produce an Architectural Blueprint Summary of the overall project in the following format:

```
# Architectural Blueprint Summary for: Name of Software
* Software Project Type: web app, server code, cloud web service, mobile app, shared library, etc.
* Programming Languages: List of programming languages used in project
* Software Principles: multi-threaded, event-driven, data transformation, server processing, client app code, etc
* Data Storage: shared memory, disk, database, SQL vs NoSQL, non-persisted, data separated from code
* Software Licensing: Commercial & Non-Commercial licenses, Open Source licenses (BSD, MIT, GPL, LGPL, Apache, etc.). Identify conflicting licenses.
* Security Handling: encrypted vs non-encrypted data, memory buffer management, shared memory protections, all input is untrusted or trusted
* Performance characteristics: multi-threaded, non-blocking code, extra optimized, background tasks, CPU bound processing, etc.
* Software resiliency patterns: fail fast, parameter validation, defensive code, error logging, etc.
* Analysis of the architectural soundness and best practices: code is consistent with its programming language style, structure is consistent with its application or server framework
* Architectural Problems Identified: coarse locks in multi-threaded, global and shared memory in library, UI in a non-interactive server, versioning fragility, etc.
* Short summary of the above that can be used as a reference for analyzing other code in this codebase

Use the following sample code from a software project to create the Architectural Blueprint Summary of the overall project. And for any Architectural Problems Identified, please provide online resource links to explain the tradeoffs, risks and concerns.

Use the following specific architectural guidelines for this development project when performing your architectural analysis - including for consistency with or conflicts between the architecture you see in the code and way the architecture principle is defined in the guidelines:
{guidelines}

{chunking}

```
{code}
