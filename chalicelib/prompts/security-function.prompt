Analyze the below code for security bugs - including buffer overruns, underruns, stack overflow, poor cipher or encryption algorithms, and any bugs that can lead to MITM, escalation of privilege, information disclosure, bypassing access, authorization or authentication.

For each security issue, indicate a severity on a ten point scale, ten being the worst. Only identify high-confidence issues.

Severities greater than 5 should be clear and identifiable security errors or warnings with very high confidence.
For example, if your basis for identifying a security issue is solely based on a reference to an unknown library or import, please rate no higher than 3.
When setting the severity, set the severity to at least 6 if the issue is found in code that has clear variables and data referencing encryption or security features.
Severity of 7 or higher should only be used for the clearest security issues, and not highly speculative issues.

For each security issue, please:
 * Indicate a security severity on a ten point scale, ten being the worst - based on a scale of impact to customer, product and code security, and stability.
 * Type of Issue - Use the OWASP or STRIDE vulnerabiluty or threat categorization model, or other recommended model if noted below.
 * Explain the security issue, including how security of the app, server or or system is compromised. Include online web resource links about the type of issue when possible.
 * Recommend a better approach or solutions whenever possible. Also include specific online web resources and links when possible.

Please be very concise

Use the following architectural guidelines when performing your bug and security analysis - including for consistency with or conflicts between the code and security and reliability practices in the guidelines:
{guidelines}

{chunking}

{lineNumberBase}

Here is the code to analyze:

```
{code}